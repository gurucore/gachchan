{"mappings":";;;;;;;;;;;AAQO,MAAM;IACX;;;;GAIC,GACD,OAAO,qBAAqB,GAAoB,EAAU;QACxD,IAAI,OAAO,QAAQ,UACjB,OAAO;QAGT,oBAAoB;QACpB,IAAI,CAAC,KACH,OAAO;QAGT,IAAI,MAAM;QACV,IAAI,OAAO,QAAQ,UACjB,MAAM,IAAI,OAAO,CAAC,MAAM;QAE1B,QAAQ;QACR,6BAA6B;QAC7B,IAAI;QAEJ,OAAO,CAAA,GAAA,sCAAW,EAAE,QAAQ,CAAC;IAC/B;IAEA;;;;GAIC,GACD,OAAO,gCAAgC,UAAoB,EAAE,QAAgB,EAAE;QAC7E,IAAI,CAAC,YACH;QAGF,IAAI,UAAU,YAAY;YACxB,yCAAyC;YACzC,IAAI,IAAI,CAAC,gBAAgB,MAAM,IAAI,CAAC,eAAe,IACjD,MAAM;QAIV,GAAG;QAEH,OAAO;IACT;IAEA,sDAAsD,GACtD,OAAO,mCAAmC;QACxC,MAAM,WAAW,CAAA,GAAA,wCAAa,EAAE,oBAAoB,CAAC;QACrD,MAAM,OAAO,CAAA,GAAA,wCAAa,EAAE,4BAA4B,CAAC;QACzD,OAAO;IACT;IAEA,wDAAwD,GACxD,OAAO,0CAA0C;QAC/C,MAAM,WAAW,CAAA,GAAA,wCAAa,EAAE,oBAAoB,CAAC;QACrD,MAAM,SAAS,CAAA,GAAA,wCAAa,EAAE,mCAAmC,CAAC;QAClE,OAAO;IACT;IAEA;;;;GAIC,GACD,OAAO,mBAAmB;QACxB,IAAI,CAAC,IAAI,CAAC,eAAe,IACvB,OAAO;QAGT,MAAM,OAAO,IAAI,CAAC,gCAAgC;QAClD,IAAI,AAAC,UAAU,QAAQ,QAAQ,UAAY,UAAU,QAAQ,QAAQ,QACnE,OAAO;aAEP,OAAO;IAEX;IAEA;;;GAGC,GACD,OAAO,kBAAkB,SAAkB,EAAE;QAC3C,IAAI,CAAC,WACH,YAAY,IAAI,CAAC,gCAAgC;QAGnD,IAAI,CAAC,IAAI,CAAC,eAAe,IACvB,OAAO;QAGT,IAAI,UAAU,aAAa,aAAa,QACtC,OAAO;QAGT,OAAO;IACT;IACA;;;GAGC,GACD,OAAO,kBAAkB,SAAkB,EAAE;QAC3C,IAAI,CAAC,WACH,YAAY,IAAI,CAAC,gCAAgC;QAGnD,IAAI,CAAC,IAAI,CAAC,eAAe,IACvB,OAAO;QAGT,IAAI,UAAU,aAAa,aAAa,QACtC,OAAO;QAGT,OAAO;IACT;IAEA;;GAEC,GACD,OAAO,kBAAkB;QACvB,MAAM,WAAW,CAAA,GAAA,wCAAa,EAAE,oBAAoB,CAAC;QAErD,4BAA4B;QAC5B,MAAM,aAAa,SAAS,MAAM;QAClC,IAAI,IAAI,cAAc,aAAa,GACjC,OAAO;QAGT,OAAO;IACT;IAEA;;;GAGC,GACD,OAAO,0BAA0B,GAAW,EAAE;QAC5C,IAAI,IAAI,MAAM,CAAC,cAAc,GAC3B,OAAO;QAGT,IAAI,IAAI,MAAM,CAAC,YAAY,GACzB,OAAO;QAGT,OAAO;IACT;AACF","sources":["src/helper/StockvnHelper.ts"],"sourcesContent":["ï»¿import _flatten from 'lodash/flatten.js'\r\nimport _isNumber from 'lodash/isNumber.js'\r\nimport _intersectionWith from 'lodash/intersectionWith.js'\r\nimport _intersection from 'lodash/intersection.js'\r\n\r\nimport { CommonHelper } from './CommonHelper'\r\nimport { DateTimeHelper } from './DateTimeHelper'\r\n\r\nexport class StockvnHelper {\r\n  /**\r\n   * StockCompany usually represent 1000000 (1 million) as 1,000,000\r\n   * We need to convert it to 1000000\r\n   * @param num\r\n   */\r\n  static StandardizeVolNumber(num: string | number): number {\r\n    if (typeof num === 'number') {\r\n      return num as number\r\n    }\r\n\r\n    // undefined or null\r\n    if (!num) {\r\n      return NaN\r\n    }\r\n\r\n    let ret = ''\r\n    if (typeof num === 'string') {\r\n      ret = num.replace(/,/g, '')\r\n    }\r\n    // else{\r\n    //   // is number, do nothing\r\n    // }\r\n\r\n    return CommonHelper.ToNumber(ret)\r\n  }\r\n\r\n  /**\r\n   * continuous checkWorkingHours and call callbackFn with interval\r\n   * @param {*} callbackFn\r\n   * @param {*} interval\r\n   */\r\n  static ContinuousExecuteInWorkingHours(callbackFn: Function, interval: number) {\r\n    if (!callbackFn) {\r\n      return\r\n    }\r\n\r\n    let timerId = setInterval(async () => {\r\n      // only perform callback in trading hours\r\n      if (this.IsInWorkingHours() && this.IsInWorkingDays()) {\r\n        await callbackFn()\r\n      } else {\r\n        // console.debug(now, \"out of trading hour, I don't refresh signal to save network consumption\")\r\n      }\r\n    }, interval)\r\n\r\n    return timerId\r\n  }\r\n\r\n  /** return current `hhmm` timestring in GMT7 timezone */\r\n  static getCurrentGMT7HoursMinutesString() {\r\n    const gmt7time = DateTimeHelper.GetTimeInGMTTimezone(7)\r\n    const hhmm = DateTimeHelper.GetCurrentHoursMinutesString(gmt7time)\r\n    return hhmm\r\n  }\r\n\r\n  /** return current `hhmmss` timestring in GMT7 timezone */\r\n  static getCurrentGMT7HoursMinutesSecondsString() {\r\n    const gmt7time = DateTimeHelper.GetTimeInGMTTimezone(7)\r\n    const hhmmss = DateTimeHelper.GetCurrentHoursMinutesSecondsString(gmt7time)\r\n    return hhmmss\r\n  }\r\n\r\n  /**\r\n   * from \"now\", if in working day, get hhmm time in hhmm format, like \"1130\" or \"0959\", then check stricly inside 0845-1130 or 1300-1445\r\n   * @param {Date} now\r\n   * @returns boolean\r\n   */\r\n  static IsInWorkingHours() {\r\n    if (!this.IsInWorkingDays()) {\r\n      return false\r\n    }\r\n\r\n    const hhmm = this.getCurrentGMT7HoursMinutesString()\r\n    if (('0845' <= hhmm && hhmm <= '1130') || ('1300' <= hhmm && hhmm <= '1445')) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  is in ATO sessions (stricly inside 0845-0915)\r\n   * @param {String} nowString hhhmm string, like \"1130\" or \"0959\"\r\n   */\r\n  static IsIn_ATO_Sessions(nowString?: string) {\r\n    if (!nowString) {\r\n      nowString = this.getCurrentGMT7HoursMinutesString()\r\n    }\r\n\r\n    if (!this.IsInWorkingDays()) {\r\n      return false\r\n    }\r\n\r\n    if ('0845' <= nowString && nowString <= '0915') {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n  /**\r\n   *  is in ATC sessions (strictly inside 1430-1445)\r\n   * @param {String} nowString hhhmm string, like \"1130\" or \"0959\"\r\n   */\r\n  static IsIn_ATC_Sessions(nowString?: string) {\r\n    if (!nowString) {\r\n      nowString = this.getCurrentGMT7HoursMinutesString()\r\n    }\r\n\r\n    if (!this.IsInWorkingDays()) {\r\n      return false\r\n    }\r\n\r\n    if ('1430' <= nowString && nowString <= '1445') {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * return true if current moment is Monday to Friday (Vietnam working days) in GMT+7 timezone\r\n   */\r\n  static IsInWorkingDays() {\r\n    const gmt7time = DateTimeHelper.GetTimeInGMTTimezone(7)\r\n\r\n    // Sunday - Saturday : 0 - 6\r\n    const currentDay = gmt7time.getDay()\r\n    if (0 < currentDay && currentDay < 6) {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * return true if s is like HNXINDEX, I3-FIN\r\n   * @param str SymbolCode (HPG, HNXINDEX, I3-FIN)\r\n   */\r\n  static IsCompoundIndexSymbolCode(str: string) {\r\n    if (str.search(/^I\\d\\-/i) == 0) {\r\n      return true\r\n    }\r\n\r\n    if (str.search(/INDEX/) >= 0) {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"StockvnHelper.c5562748.js.map"}