{"version":3,"sources":["webpack://gachchan/webpack/universalModuleDefinition","webpack://gachchan/webpack/bootstrap","webpack://gachchan/./node_modules/@babel/runtime/regenerator/index.js","webpack://gachchan/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://gachchan/./node_modules/@babel/runtime/helpers/createClass.js","webpack://gachchan/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://gachchan/./node_modules/lodash/isNumber.js","webpack://gachchan/./node_modules/lodash/_nativeCreate.js","webpack://gachchan/./node_modules/lodash/_assocIndexOf.js","webpack://gachchan/./node_modules/lodash/_getMapData.js","webpack://gachchan/./node_modules/lodash/isObjectLike.js","webpack://gachchan/./node_modules/lodash/flatten.js","webpack://gachchan/./node_modules/lodash/_arrayMap.js","webpack://gachchan/./node_modules/lodash/_getNative.js","webpack://gachchan/./node_modules/lodash/_baseGetTag.js","webpack://gachchan/./node_modules/lodash/_Symbol.js","webpack://gachchan/./node_modules/lodash/_root.js","webpack://gachchan/./node_modules/lodash/intersection.js","webpack://gachchan/./node_modules/lodash/intersectionWith.js","webpack://gachchan/./node_modules/lodash/_baseIntersection.js","webpack://gachchan/./node_modules/lodash/isFunction.js","webpack://gachchan/./node_modules/lodash/isObject.js","webpack://gachchan/./node_modules/lodash/_baseRest.js","webpack://gachchan/./node_modules/lodash/identity.js","webpack://gachchan/./node_modules/lodash/_castArrayLikeObject.js","webpack://gachchan/./node_modules/decimal.js/decimal.js","webpack://gachchan/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gachchan/./node_modules/regenerator-runtime/runtime.js","webpack://gachchan/./node_modules/lodash/_SetCache.js","webpack://gachchan/./node_modules/lodash/_MapCache.js","webpack://gachchan/./node_modules/lodash/_mapCacheClear.js","webpack://gachchan/./node_modules/lodash/_Hash.js","webpack://gachchan/./node_modules/lodash/_hashClear.js","webpack://gachchan/./node_modules/lodash/_baseIsNative.js","webpack://gachchan/./node_modules/lodash/_freeGlobal.js","webpack://gachchan/(webpack)/buildin/global.js","webpack://gachchan/./node_modules/lodash/_getRawTag.js","webpack://gachchan/./node_modules/lodash/_objectToString.js","webpack://gachchan/./node_modules/lodash/_isMasked.js","webpack://gachchan/./node_modules/lodash/_coreJsData.js","webpack://gachchan/./node_modules/lodash/_toSource.js","webpack://gachchan/./node_modules/lodash/_getValue.js","webpack://gachchan/./node_modules/lodash/_hashDelete.js","webpack://gachchan/./node_modules/lodash/_hashGet.js","webpack://gachchan/./node_modules/lodash/_hashHas.js","webpack://gachchan/./node_modules/lodash/_hashSet.js","webpack://gachchan/./node_modules/lodash/_ListCache.js","webpack://gachchan/./node_modules/lodash/_listCacheClear.js","webpack://gachchan/./node_modules/lodash/_listCacheDelete.js","webpack://gachchan/./node_modules/lodash/eq.js","webpack://gachchan/./node_modules/lodash/_listCacheGet.js","webpack://gachchan/./node_modules/lodash/_listCacheHas.js","webpack://gachchan/./node_modules/lodash/_listCacheSet.js","webpack://gachchan/./node_modules/lodash/_Map.js","webpack://gachchan/./node_modules/lodash/_mapCacheDelete.js","webpack://gachchan/./node_modules/lodash/_isKeyable.js","webpack://gachchan/./node_modules/lodash/_mapCacheGet.js","webpack://gachchan/./node_modules/lodash/_mapCacheHas.js","webpack://gachchan/./node_modules/lodash/_mapCacheSet.js","webpack://gachchan/./node_modules/lodash/_setCacheAdd.js","webpack://gachchan/./node_modules/lodash/_setCacheHas.js","webpack://gachchan/./node_modules/lodash/_arrayIncludes.js","webpack://gachchan/./node_modules/lodash/_baseIndexOf.js","webpack://gachchan/./node_modules/lodash/_baseFindIndex.js","webpack://gachchan/./node_modules/lodash/_baseIsNaN.js","webpack://gachchan/./node_modules/lodash/_strictIndexOf.js","webpack://gachchan/./node_modules/lodash/_arrayIncludesWith.js","webpack://gachchan/./node_modules/lodash/_baseUnary.js","webpack://gachchan/./node_modules/lodash/_cacheHas.js","webpack://gachchan/./node_modules/lodash/_overRest.js","webpack://gachchan/./node_modules/lodash/_apply.js","webpack://gachchan/./node_modules/lodash/_setToString.js","webpack://gachchan/./node_modules/lodash/_baseSetToString.js","webpack://gachchan/./node_modules/lodash/constant.js","webpack://gachchan/./node_modules/lodash/_defineProperty.js","webpack://gachchan/./node_modules/lodash/_shortOut.js","webpack://gachchan/./node_modules/lodash/isArrayLikeObject.js","webpack://gachchan/./node_modules/lodash/isArrayLike.js","webpack://gachchan/./node_modules/lodash/isLength.js","webpack://gachchan/./node_modules/lodash/last.js","webpack://gachchan/./node_modules/lodash/_baseFlatten.js","webpack://gachchan/./node_modules/lodash/_arrayPush.js","webpack://gachchan/./node_modules/lodash/_isFlattenable.js","webpack://gachchan/./node_modules/lodash/isArguments.js","webpack://gachchan/./node_modules/lodash/_baseIsArguments.js","webpack://gachchan/./node_modules/lodash/isArray.js","webpack://gachchan/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack://gachchan/./src/helper/CommonHelper.js","webpack://gachchan/./src/helper/StockHelper.js","webpack://gachchan/./src/helper/AuthHelper.js","webpack://gachchan/./src/helper/Util.js","webpack://gachchan/./src/helper/ReactiveSymbolHistoryStore.js","webpack://gachchan/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__84__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","args","arguments","apply","err","undefined","baseGetTag","isObjectLike","nativeCreate","getNative","eq","array","isKeyable","map","data","__data__","baseFlatten","iteratee","index","result","Array","baseIsNative","getValue","getRawTag","objectToString","symToStringTag","freeGlobal","freeSelf","Function","arrayMap","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","last","intersectionWith","comparator","pop","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","includes","othLength","othIndex","caches","maxLength","Infinity","seen","outer","computed","cache","push","isObject","tag","type","identity","overRest","setToString","func","start","isArrayLikeObject","globalScope","Decimal","inexact","quadrant","EXP_LIMIT","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","invalidArgument","decimalError","mathfloor","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","P","digitsToString","k","ws","indexOfLastWord","str","w","getZeroString","checkInt32","max","Error","checkRoundingDigits","rm","repeating","di","rd","ceil","convertBase","baseIn","baseOut","j","arrL","arr","strL","indexOf","charAt","reverse","absoluteValue","abs","x","constructor","finalise","e","clampedTo","clamp","Ctor","NaN","gt","cmp","comparedTo","y","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","len","isZero","tinyPow","toString","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","rep","t3","t3plusx","isFinite","toExponential","slice","divide","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","log","base","isBase10","denominator","inf","num","naturalLogarithm","getLn10","sub","xe","xLTy","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","add","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","a","b","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","guard","sum","c0","numerator","x1","String","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","test","toLowerCase","isHyperbolic","u","pi","atan2","config","obj","v","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","isDecimalInstance","log2","log10","random","Uint32Array","copy","clone","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","MapCache","setCacheAdd","setCacheHas","has","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","entries","clear","Hash","ListCache","Map","size","hashClear","hashDelete","hashGet","hashHas","hashSet","isFunction","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","RegExp","global","g","window","nativeObjectToString","isOwn","unmasked","uid","coreJsData","maskSrcKey","exec","IE_PROTO","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","assocIndexOf","splice","other","getMapData","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","predicate","fromRight","nativeMax","transform","otherArgs","thisArg","baseSetToString","shortOut","constant","string","nativeNow","Date","now","count","lastCalled","stamp","remaining","isArrayLike","isLength","arrayPush","isFlattenable","depth","isStrict","offset","isArguments","isArray","spreadableSymbol","isConcatSpreadable","baseIsArguments","propertyIsEnumerable","CommonHelper","val","ToNumber","numberString","fractationDigits","treatNonNumberValueAs","ret","convertedToNumberVal","_isNumber","decimalPlacesMultiplier","Number","EPSILON","actionFn","run","shouldPerformActionFn","delay","isPreviousRunSuccess","DEFAULT_INTERVAL","intervalFn","timerId","setTimeout","executeImmediately","ContinuousExecuteBySetTimeoutDefaultIntervalFn","previousDelay","newDelay","date","getHours","padStart","getMinutes","GetCurrentHoursMinutesString","getSeconds","culture","timezone","Intl","DateTimeFormat","dateStyle","timeStyle","hour12","format","GetRandomIntegerTo","firstList","otherList","ignoreCase","arrFirsts","_flatten","arrEvaluations","_intersectionWith","listVal","otherVal","toUpperCase","_intersection","portion","full","FormatNumber","from","to","Percent","parts","separator","join","showPrefixSign","showZeroVal","suffix","prefixSign","unitDividen","unit","locale","unitNumbers","NumberFormat","StockHelper","callbackFn","interval","setInterval","IsInWorkingHours","IsInWorkingDays","hhmm","currentDay","getDay","AuthHelper","arr1","arr2","concat","filter","requireRoles","userRoles","arrRet","arrStringRoles","split","trim","ADMINROLE","roleToCheck","Util","strCommaSeparated","segment","jsonDateString","parseInt","newParts","part","path","_","ReactiveSymbolHistoryStore","fb$vietnamStock","interval_cacheInvalidator","interval_syncAllLatestPricesAtOnce","ReactiveStore","symbolCategory","symbolId","get_fb$VietnamStock","isEmpty","on","snapshot","mergeLatestPriceToStore","getLatestPrices_HTTP_Once","dataLatestPrices_AllSymbols","cacheInvalidator","dataLatestPrices","liveInfoOfSymbol","objOnCurrentDate","pricesOHLCExtended","rts","ts","open","low","high","h","close","listSymbolHistory","orderBy"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gachchan\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"gachchan\"] = factory(root[\"_\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__84__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 85);\n","module.exports = require(\"regenerator-runtime\");\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = baseRest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  if (comparator) {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nmodule.exports = intersectionWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.3.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__84__;","import _intersection from \"lodash/intersection\"\r\nimport _intersectionWith from \"lodash/intersectionWith\"\r\nimport _isNumber from \"lodash/isNumber\"\r\nimport _flatten from \"lodash/flatten\"\r\nconst Decimal = require(\"decimal.js\")\r\n\r\nexport default class CommonHelper {\r\n  /**\r\n   * @deprecated use ToNumber() TODO: remove this\r\n   */\r\n  static ToActualNumber(val) {\r\n    return CommonHelper.ToNumber(val)\r\n  }\r\n\r\n  /**\r\n   * @deprecated use ToNumber() TODO: remove this\r\n   */\r\n  static FormatNumber(numberString, fractationDigits = 0) {\r\n    return CommonHelper.ToNumber(numberString, fractationDigits)\r\n  }\r\n\r\n  /**\r\n   * if provide a number or number-string, this will return a number, with fractationDigits\r\n   * if provided a string (\"AT, ATC, ATO\") throw exception\r\n   * NonNumberValue like null, undefined and NaN is treat as 0\r\n   * @param {string} numberString\r\n   * @param {number} fractationDigits number of decimal digit\r\n   * @param {*} treatNonNumberValueAs\r\n   * @returns number\r\n   */\r\n  static ToNumber(numberString, fractationDigits, treatNonNumberValueAs = 0) {\r\n    let ret = treatNonNumberValueAs\r\n\r\n    const convertedToNumberVal = +numberString\r\n    // note that isNumber(NaN) == true\r\n    if (_isNumber(convertedToNumberVal) && !isNaN(convertedToNumberVal)) {\r\n      ret = convertedToNumberVal\r\n    }\r\n\r\n    if (fractationDigits !== undefined) {\r\n      ret = new Decimal(ret).toDP(fractationDigits).toNumber()\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * round value to X decimal places https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\r\n   * 19.103857566765578635.toBe(19.1)\r\n   * 19.143857566765578635.toBe(19.1)\r\n   * 19.144857566765578635.toBe(19.1)\r\n   * @param {*} value\r\n   * @returns\r\n   */\r\n  static RoundNumber(value, decimalPlaces = 1) {\r\n    const decimalPlacesMultiplier = Math.pow(10, decimalPlaces)\r\n    return Math.round((value + Number.EPSILON) * decimalPlacesMultiplier) / decimalPlacesMultiplier\r\n  }\r\n\r\n  /**\r\n   * Continuously call actionFn by setTimeout with interval. The next process will be schedule after current process completed (success or failed)\r\n   * Interval can be determined (randomly) by intervalFn() and delay betwen execution can be vary.\r\n   * @param {Function} actionFn support async function\r\n   * @param {Number} DEFAULT_INTERVAL if nothing provided or callbackFn success, this is the interval for running. If adjustment happen, it will not exceed 2*DEFAULT_INTERVAL\r\n   * @param {Function} intervalFn intervalFn(currentDelay, isPreviousRunSuccess, DEFAULT_INTERVAL). if currentDelay is undefined, should return the default. if currentDelay has value, should return next delay.\r\n   * @param {Boolean} executeImmediately if true, invoke actionFn() immediately when calling this function\r\n   * @param {Function} shouldPerformActionFn intervalFn(currentDelay, isPreviousRunSuccess, DEFAULT_INTERVAL). return true if you want to perform actionFn when timeout happen.\r\n   */\r\n  static async ContinuousExecuteBySetTimeout(actionFn, DEFAULT_INTERVAL = 10000, intervalFn = undefined, executeImmediately = false, shouldPerformActionFn = () => true) {\r\n    if (!actionFn || typeof actionFn != \"function\") {\r\n      return {}\r\n    }\r\n\r\n    // use the default intervalFn\r\n    if (typeof intervalFn != \"function\") {\r\n      intervalFn = CommonHelper.ContinuousExecuteBySetTimeoutDefaultIntervalFn\r\n    }\r\n\r\n    let delay = intervalFn(undefined, undefined, DEFAULT_INTERVAL)\r\n    let isPreviousRunSuccess = undefined\r\n    let ret = {\r\n      timerId: undefined,\r\n      delay,\r\n    }\r\n\r\n    async function run() {\r\n      try {\r\n        if (shouldPerformActionFn(delay, isPreviousRunSuccess, DEFAULT_INTERVAL)) {\r\n          await actionFn()\r\n          isPreviousRunSuccess = true\r\n        }\r\n      } catch (error) {\r\n        isPreviousRunSuccess = false\r\n      }\r\n\r\n      // calculate the new delay for the next run\r\n      delay = intervalFn(delay, isPreviousRunSuccess, DEFAULT_INTERVAL)\r\n      ret.delay = delay\r\n      ret.timerId = setTimeout(run, delay)\r\n      // console.debug(`${ret.delay} ${ret.timerId} after setTimeout`)\r\n    }\r\n\r\n    // run immediately when being called, not after wait for the first timeout\r\n    if (executeImmediately && shouldPerformActionFn(delay, isPreviousRunSuccess, DEFAULT_INTERVAL)) {\r\n      try {\r\n        await actionFn()\r\n        isPreviousRunSuccess = true\r\n      } catch (error) {\r\n        isPreviousRunSuccess = false\r\n      }\r\n    }\r\n    ret.timerId = setTimeout(run, delay)\r\n    // console.debug(`${ret.delay} ${ret.timerId} after setTimeout -------- INIT`)\r\n\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * create a default function/behaviour, calculate delay based on previous delay and isPreviousRunSuccess.\r\n   * When calling ContinuousExecuteBySetTimeout() without intervalFn, this func will be used as default implementation\r\n   * @param {*} previousDelay\r\n   * @param {*} isPreviousRunSuccess\r\n   * @returns\r\n   */\r\n  static ContinuousExecuteBySetTimeoutDefaultIntervalFn(previousDelay, isPreviousRunSuccess, DEFAULT_INTERVAL) {\r\n    if (isPreviousRunSuccess) {\r\n      return DEFAULT_INTERVAL // job is done successfully, we back to use DEFAULT_INTERVAL (because prev delay (which is a failed one) can be (e.g. 12345ms), longer than DEFAULT_INTERVAL)\r\n    }\r\n\r\n    // adjust delay to be longer than previousDelay, but maximum is 2 * DEFAULT_INTERVAL\r\n    let newDelay = previousDelay || DEFAULT_INTERVAL\r\n    // increase delay, at least 20%\r\n    newDelay = Math.round(newDelay * (1.2 + Math.random()))\r\n    if (newDelay > 2 * DEFAULT_INTERVAL) {\r\n      newDelay = 2 * DEFAULT_INTERVAL\r\n    }\r\n    // console.debug(\"change to different newDelay for next request:\", newDelay)\r\n\r\n    return newDelay\r\n  }\r\n\r\n  /**\r\n   * change 1 to 1️⃣ (unicode square box character)\r\n   * @param {*} numberString\r\n   * @returns {string}\r\n   */\r\n  static RepresentNumberInIconicDigit(numberString) {\r\n    if (!numberString) {\r\n      return \"\"\r\n    }\r\n\r\n    let ret = numberString.toString()\r\n    ret = ret\r\n      .replace(/0/g, \"0️⃣\")\r\n      .replace(/1/g, \"1️⃣\")\r\n      .replace(/2/g, \"2️⃣\")\r\n      .replace(/3/g, \"3️⃣\")\r\n      .replace(/4/g, \"4️⃣\")\r\n      .replace(/5/g, \"5️⃣\")\r\n      .replace(/6/g, \"6️⃣\")\r\n      .replace(/7/g, \"7️⃣\")\r\n      .replace(/8/g, \"8️⃣\")\r\n      .replace(/9/g, \"9️⃣\")\r\n\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * if now is 14:22, this return 1422.\r\n   * 9:40AM ==> 0940\r\n   * 16:03 (PM) ==> 1603\r\n   * @param {Date} date\r\n   * @returns {string}\r\n   */\r\n  static GetCurrentHoursMinutesString(date) {\r\n    if (!date) date = new Date()\r\n    let currentHoursMinutesString =\r\n      date\r\n        .getHours()\r\n        .toString()\r\n        .padStart(2, \"0\") +\r\n      \"\" +\r\n      date\r\n        .getMinutes()\r\n        .toString()\r\n        .padStart(2, \"0\")\r\n\r\n    return currentHoursMinutesString\r\n  }\r\n\r\n  /**\r\n   * if now is 14:22:59, this return 142259.\r\n   * 9:40AM ==> 094000\r\n   * 16:03 (PM) ==> 160300\r\n   */\r\n  static GetCurrentHoursMinutesSecondsString(date) {\r\n    if (!date) date = new Date()\r\n\r\n    let ret =\r\n      CommonHelper.GetCurrentHoursMinutesString(date) +\r\n      date\r\n        .getSeconds()\r\n        .toString()\r\n        .padStart(2, \"0\")\r\n\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * return current date time in full format, in specific culture (language) and timezone\r\n   * @param {*} culture\r\n   * @param {*} timezone\r\n   * @returns\r\n   */\r\n  static GetDatetimeNowString(culture = \"vi-VN\", timezone = \"Asia/Saigon\") {\r\n    return new Intl.DateTimeFormat(culture, { timezone, dateStyle: \"full\", timeStyle: \"long\", hour12: false }).format(new Date())\r\n    // _calculatedCWData_lastUpdated = new Date().toLocaleString(\"vi-VN\", { timezone: \"Asia/Saigon\", hour12: false })\r\n  }\r\n\r\n  /**\r\n   * random an int number, maximum is max - 1. Max = 10, so return 0 to 10\r\n   * @param {*} max\r\n   * @returns number integer\r\n   */\r\n  static GetRandomIntegerTo(max) {\r\n    return Math.round(Math.random() * max)\r\n  }\r\n\r\n  /**\r\n   * return random element inside array\r\n   * @param {*} arr\r\n   * @returns\r\n   */\r\n  static GetRandomArrayElement(arr) {\r\n    if (Array.isArray(arr)) {\r\n      return arr[CommonHelper.GetRandomIntegerTo(arr.length - 1)]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check for intersection of number or string\r\n   * E.g.: [1,2,3], 2 ==> true\r\n   * E.g.: [\"a\",\"b\",\"c\"], [\"a\"] ==> true\r\n   * E.g.: [\"a\",\"b\",\"c\"], [\"A\"], true ==> true, a==A because of ignoreCase\r\n   *\r\n   * value (which is not string) is compared by === (null === null, undefined === undefined)\r\n   * @param {number|string|number[]|string[]} firstList\r\n   * @param {number|string|number[]|string[]} otherList accept single value or array\r\n   * @param {boolean} ignoreCase if any value is string, cast either values of firstList and otherList toString(), then compare ignore case\r\n   * @returns boolean true if there is an intersection\r\n   */\r\n  static HasAnyOfIntersection(firstList, otherList = \"\", ignoreCase = true) {\r\n    if (!firstList || !otherList) return false\r\n\r\n    const arrFirsts = _flatten([firstList]) // [\"\"]   ==> [\"\"], [[1,2]]   ==> [1,2]\r\n    const arrEvaluations = _flatten([otherList]) // [\"\"]   ==> [\"\"], [[1,2]]   ==> [1,2]\r\n\r\n    let ret\r\n    if (ignoreCase) {\r\n      ret =\r\n        _intersectionWith(arrFirsts, arrEvaluations, (listVal, otherVal) => {\r\n          if (typeof listVal === \"string\" || typeof otherVal === \"string\") {\r\n            return listVal?.toString()?.toUpperCase() === otherVal?.toString()?.toUpperCase()\r\n          }\r\n\r\n          return listVal === otherVal\r\n        }).length > 0\r\n    } else {\r\n      ret = _intersection(arrFirsts, arrEvaluations).length > 0\r\n    }\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * return percent of portion to full, 25 50 ==> 50\r\n   * @param {*} portion\r\n   * @param {*} full\r\n   * @param {*} fractationDigits\r\n   * @returns number\r\n   */\r\n  static Percent(portion, full, fractationDigits) {\r\n    let ret = (100 * portion) / full\r\n\r\n    if (fractationDigits > 0) {\r\n      ret = CommonHelper.FormatNumber(ret, fractationDigits)\r\n    }\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * from 100 to 110, the diff is 10, and is 10%. Return 10\r\n   * @param {*} from\r\n   * @param {*} to\r\n   * @returns null if from to is not number\r\n   */\r\n  static DiffInPercent(from, to, fractationDigits) {\r\n    let ret = null\r\n\r\n    if (_isNumber(from) && _isNumber(to)) {\r\n      ret = CommonHelper.Percent(to - from, from, fractationDigits)\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  // =========== ===================== ===========\r\n  // =========== string representation ===========\r\n  // =========== ===================== ===========\r\n\r\n  /**\r\n   * join all arguments with \"/\" seperator.\r\n   * E.g.: JoinPaths(\"a\", b, c)\r\n   * @returns String\r\n   */\r\n  static JoinPaths() {\r\n    const parts = Array.prototype.slice.call(arguments) // make array from arguments\r\n\r\n    var separator = \"/\"\r\n    var replace = new RegExp(separator + \"{1,}\", \"g\")\r\n    return parts.join(separator).replace(replace, separator)\r\n  }\r\n\r\n  /**\r\n   * empty string, null, NaN, undefined return \"\"\r\n   *  or text string which is not a number, return \"\"\r\n   * format number to string (usage of PercentValueFormatter can use this)\r\n   * @param {*} val\r\n   * @param {*} fractationDigits\r\n   * @param {*} showPrefixSign\r\n   * @returns string\r\n   */\r\n  static ToNumberString(val, fractationDigits = 2, showPrefixSign = false, showZeroVal = true, suffix = \"\") {\r\n    if (val == 0 && !showZeroVal) {\r\n      return \"\"\r\n    }\r\n\r\n    if (!val && val !== 0) {\r\n      // NaN, undefined, null, \"\"\r\n      return \"\"\r\n    }\r\n\r\n    const prefixSign = showPrefixSign && val > 0 ? \"+\" : \"\"\r\n\r\n    return prefixSign + CommonHelper.FormatNumber(val, fractationDigits) + suffix\r\n  }\r\n\r\n  /**\r\n   * display 1000000 as 1tr, 1000 as 1k\r\n   * Also round the number after converting (100400 ==> 100k, 100500 ==> 101k)\r\n   * vi-VN default thounsand separator is ,\r\n   * 0 will be returned as \"0\"\r\n   * NaN or \"\" will be returned as \"\"\r\n   * \"ATC\" (which is cannot be converted to number) will be returned as as \"ATC\"\r\n   * @param {number | string} numberString original number (string) to format. This string must be able to convert to number.\r\n   * @param {number} unitDividen dividen divide number to this\r\n   * @param {number} fractationDigits default is 0 (1000 --> 1,000). if 1, 1000,1 --> 1,000.1\r\n   * @param {string} unit default is \"tr\" (triệu đồng VN)\r\n   * @param {string} locale \"en-US\" \"vi-VN\"\r\n   * @returns string\r\n   */\r\n  static NumberToUnitString(numberString, unitDividen = 1, fractationDigits = 0, unit = \"\", locale = \"en-US\") {\r\n    // empty string, or text string which is not a number, return\r\n    if (numberString === 0) return \"0\"\r\n    if (!numberString) return \"\"\r\n    if (!+numberString) return numberString?.toString()\r\n\r\n    let unitNumbers = (+numberString / unitDividen).toFixed(fractationDigits)\r\n    return new Intl.NumberFormat(locale).format(+unitNumbers) + unit\r\n  }\r\n\r\n  // =========== ===================== ===========\r\n  // =========== string representation ===========\r\n  // =========== ===================== ===========\r\n  /**\r\n   * @deprecated use ToNumber()\r\n   * Round number to 2 digit. 1.22222 => 1.22\r\n   * @param {*} num\r\n   */\r\n  static roundToTwo(num) {\r\n    return CommonHelper.ToNumber(num, 2)\r\n  }\r\n}\r\n","import _intersection from \"lodash/intersection\"\r\nimport _intersectionWith from \"lodash/intersectionWith\"\r\nimport _isNumber from \"lodash/isNumber\"\r\nimport _flatten from \"lodash/flatten\"\r\nconst Decimal = require(\"decimal.js\")\r\nimport CommonHelper from \"./CommonHelper\"\r\n\r\nexport default class StockHelper {\r\n  /**\r\n   * StockCompany usually represent 1000000 (1 million) as 1,000,000\r\n   * We need to convert it to 1000000\r\n   * @param {*} numberString\r\n   */\r\n  static StandardizeVolNumber(numberString) {\r\n    if (typeof numberString === \"number\") {\r\n      return numberString\r\n    }\r\n\r\n    // undefined or null\r\n    if (!numberString) {\r\n      return numberString\r\n    }\r\n\r\n    let ret\r\n    if (typeof numberString === \"string\") {\r\n      ret = numberString.replace(/,/g, \"\")\r\n    }\r\n    // else{\r\n    //   // is number, do nothing\r\n    // }\r\n\r\n    return CommonHelper.ToNumber(ret)\r\n  }\r\n\r\n  /**\r\n   * continuous checkWorkingHours and call callbackFn with interval\r\n   * @param {*} callbackFn\r\n   * @param {*} interval\r\n   */\r\n  static ContinuousExecuteInWorkingHours(callbackFn, interval) {\r\n    if (!callbackFn) {\r\n      return\r\n    }\r\n\r\n    let timerId = setInterval(async () => {\r\n      // only perform callback in trading hours\r\n      if (CommonHelper.IsInWorkingHours() && CommonHelper.IsInWorkingDays()) {\r\n        await callbackFn()\r\n      } else {\r\n        // console.debug(now, \"out of trading hour, I don't refresh signal to save network consumption\")\r\n      }\r\n    }, interval)\r\n\r\n    return timerId\r\n  }\r\n\r\n  /**\r\n   * from \"now\", if in working day, get hhmm time in hhmm format, like \"1130\" or \"0959\", then check\r\n   * @param {Date} now\r\n   * @returns boolean\r\n   */\r\n  static IsInWorkingHours(now) {\r\n    if (!now) {\r\n      now = new Date()\r\n    }\r\n\r\n    if (!StockHelper.IsInWorkingDays(now)) return false\r\n\r\n    const hhmm = CommonHelper.GetCurrentHoursMinutesString(now)\r\n    if ((\"0845\" <= hhmm && hhmm <= \"1130\") || (\"1300\" <= hhmm && hhmm <= \"1445\")) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  is in ATO sessions\r\n   * @param {String} now hhhmm string, like \"1130\" or \"0959\"\r\n   */\r\n  static IsIn_ATO_Sessions(now) {\r\n    if (!now) {\r\n      now = CommonHelper.GetCurrentHoursMinutesString()\r\n    }\r\n\r\n    if (\"0845\" <= now && now <= \"0915\") {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n  /**\r\n   *  is in ATC sessions\r\n   * @param {String} now hhhmm string, like \"1130\" or \"0959\"\r\n   */\r\n  static IsIn_ATC_Sessions(now) {\r\n    if (!now) {\r\n      now = CommonHelper.GetCurrentHoursMinutesString()\r\n    }\r\n\r\n    if (\"1430\" <= now && now <= \"1445\") {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * return true if current moment is Monday to Friday\r\n   * @param {Date} now\r\n   */\r\n  static IsInWorkingDays(now) {\r\n    if (!now) {\r\n      now = new Date()\r\n    }\r\n\r\n    let currentDay = now.getDay() // // Sunday - Saturday : 0 - 6\r\n    if (0 < currentDay && currentDay < 6) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n}\r\n","\"use strict\"\r\n\r\n/**\r\n * Util class, no state, to provide Util method to work with Roles, User, token\r\n * This can be used in web, api (nodejs), so make it totally decouple, follow SOLID principle\r\n */\r\nexport default class AuthHelper {\r\n  // if there is a constructor present in subclass, it needs to first call super() before using \"this\".\r\n  constructor() {\r\n    // super();\r\n  }\r\n\r\n  static get ADMINROLE() {\r\n    return \"admin\"\r\n  }\r\n\r\n  /**\r\n   * merge 2 arrays of roles and reduce to distinct\r\n   * [1,2,3] & [2, 3, 4] ==> return [1,2,3,4]\r\n   * @param {Array} arr1\r\n   * @param {Array} arr2\r\n   */\r\n  static mergeRoles(arr1, arr2) {\r\n    function onlyUnique(value, index, self) {\r\n      return self.indexOf(value) === index\r\n    }\r\n\r\n    let distinctArrayOfRoles = arr1.concat(arr2).filter(onlyUnique)\r\n    return distinctArrayOfRoles\r\n  }\r\n\r\n  /**\r\n   * return array of accepted roles. Admin (this.ADMINROLE) will have all roles accepted.\r\n   * Examples: given \"crm,advisor\", if user has \"crm\", this returns [crm] only\r\n   * given \"crm,advisor\", if user has \"admin\", this returns [crm,advisor]\r\n   *\r\n   * @param {String} requireRoles required roles, to say user is qualified\r\n   * @param {[String]} userRoles roles of user, to validate with requireRoles\r\n   * @returns {[String]} array of satisfy roles\r\n   */\r\n  static hasRoles(requireRoles, userRoles) {\r\n    let arrRet = []\r\n\r\n    if (!requireRoles || !userRoles || !Array.isArray(userRoles)) {\r\n      // throw Error(\"require: requireRoles, userRoles\");\r\n      return arrRet\r\n    }\r\n\r\n    const arrStringRoles = requireRoles.split(\",\").map(r => r.trim())\r\n\r\n    // check admin first, admin has all roles\r\n    if (userRoles.indexOf(this.ADMINROLE) >= 0) {\r\n      arrRet = arrStringRoles // all required roles are satisfy\r\n      return arrRet\r\n    }\r\n\r\n    // arrStringRoles == [admin,newseditor,advisor,crm]\r\n    for (let roleToCheck of arrStringRoles) {\r\n      if (userRoles.indexOf(roleToCheck) >= 0) {\r\n        // current user has this role\r\n        arrRet.push(roleToCheck)\r\n      }\r\n    }\r\n\r\n    return arrRet\r\n  } // end func\r\n}\r\n","\"use strict\"\r\n\r\n/**\r\n * Old util class from 2017, will be merged to CommonHelper\r\n */\r\nexport default class Util {\r\n  /**\r\n   *\r\n   * @param {*} min\r\n   * @param {*} max\r\n   */\r\n  static GetRandomNumberBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  /**\r\n   * split string into array, remove empty entries, each output string is trimmed\r\n   * \"1,2,3 ,,, 4, 5 ,6\" ==> [1,2,3,4,5,6]\r\n   * @param {*} strCommaSeparated\r\n   */\r\n  static splitByCommaAndTrim(strCommaSeparated) {\r\n    if (strCommaSeparated) {\r\n      return strCommaSeparated\r\n        .split(\",\")\r\n        .filter(segment => segment)\r\n        .map(e => e.trim())\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * merge 2 arrays of entries and reduce to distinct\r\n   * [1,2,3] & [2, 3, 4] ==> return [1,2,3,4]\r\n   * @param {Array} arr1\r\n   * @param {Array} arr2\r\n   */\r\n  static mergeAndDistinct(arr1, arr2) {\r\n    function onlyUnique(value, index, self) {\r\n      return self.indexOf(value) === index\r\n    }\r\n\r\n    let distinctArrayOfRoles = arr1.concat(arr2).filter(onlyUnique)\r\n    return distinctArrayOfRoles\r\n  }\r\n\r\n  /**\r\n   * give you the Date object, from the jsonDateString (return from some API services)\r\n   * @param {String} jsonDateString string of this format \"/Date(2342353453434)/\"\r\n   */\r\n  static parseJsonDate(jsonDateString) {\r\n    return new Date(parseInt(jsonDateString.replace(\"/Date(\", \"\").replace(\")/\", \"\")))\r\n  }\r\n\r\n  /**\r\n   * Joins path segments.  Preserves initial \"/\" and resolves \"..\" and \".\"\r\n   * Does not support using \"..\" to go above/outside the root.\r\n   * This means that join(\"foo\", \"../../bar\") will not resolve to \"../bar\"\r\n   */\r\n  static joinPath(/* path segments */) {\r\n    // Split the inputs into a list of path commands.\r\n    var parts = []\r\n    for (var i = 0, l = arguments.length; i < l; i++) {\r\n      parts = parts.concat(arguments[i].split(\"/\"))\r\n    }\r\n    // Interpret the path commands to get the new resolved path.\r\n    var newParts = []\r\n    for (i = 0, l = parts.length; i < l; i++) {\r\n      var part = parts[i]\r\n      // Remove leading and trailing slashes\r\n      // Also remove \".\" segments\r\n      if (!part || part === \".\") continue\r\n      // Interpret \"..\" to pop the last segment\r\n      if (part === \"..\") newParts.pop()\r\n      // Push new path segments.\r\n      else newParts.push(part)\r\n    }\r\n    // Preserve the initial slash if there was one.\r\n    if (parts[0] === \"\") newParts.unshift(\"\")\r\n    // Turn back into a single string path.\r\n    return newParts.join(\"/\") || (newParts.length ? \"/\" : \".\")\r\n  }\r\n\r\n  /**\r\n   * A simple function to get the dirname of a path\r\n   * Trailing slashes are ignored. Leading slash is preserved.\r\n   * @param {*} path\r\n   */\r\n  static dirname(path) {\r\n    return join(path, \"..\")\r\n  }\r\n} // end class\r\n","\"use strict\"\r\n\r\n// TODO: clone this class from lib-share to use here, because currently, we don;t know why we cannot import it from lib-share and make it run here\r\n\r\nconst _ = require(\"lodash\")\r\n\r\n/**\r\n * get datasnapshot, then provide to the actors chain\r\n * TODO: PERF: cache the history,\r\n * next time, only query the latest price of all symbols, then modify the last point of priceOHLCExtended in memory\r\n * periodically refresh the cache (hourly is OK)\r\n */\r\nexport default class ReactiveSymbolHistoryStore {\r\n  /**\r\n   * run every 30 seconds, to clear the state cache. It's up to the handler to decide clear what and when.\r\n   * By default, it does nothing.\r\n   * @param {*} ReactiveStore the current Store instance\r\n   */\r\n  cacheInvalidator(ReactiveStore) {}\r\n\r\n  /**\r\n   * VIRTUAL: How to get the ref to the vietnamStock on Firebase\r\n   */\r\n  get_fb$VietnamStock() {}\r\n\r\n  /**\r\n   * VIRTUAL:\r\n   */\r\n  async getLatestPrices_HTTP_Once() {}\r\n\r\n  /**\r\n   * VIRTUAL: load OLHC from remote service\r\n   * @param {*} symbolCategory\r\n   * @param {*} symbolId\r\n   * @param {*} tickPeriod\r\n   * @param {*} limitLength\r\n   */\r\n  async listSymbolHistory(symbolCategory, symbolId, tickPeriod = \"1D\", limitLength = 660) {}\r\n\r\n  constructor() {\r\n    // super();\r\n\r\n    /**\r\n     * caching state\r\n     */\r\n    this.state = {\r\n      // AAA : {\r\n      //   symbolCategory: \"VietnamStock\",\r\n      //   pricesOHLCExtended:\r\n      // [{open, high, low, close, ts, v }]\r\n      // }\r\n    }\r\n\r\n    /**\r\n     * ref to the firebase path of realtime price\r\n     */\r\n    this.fb$vietnamStock = null\r\n\r\n    /**\r\n     * Interval to run the cacheInvalidator() check. Default ls 30 000 (30s)\r\n     */\r\n    this.interval_cacheInvalidator = 30000\r\n    /**\r\n     * Interval to sync all latest price to the whole Store. Default ls 60 000 (60s)\r\n     */\r\n    this.interval_syncAllLatestPricesAtOnce = 60000\r\n  }\r\n\r\n  /**\r\n   * Init this Store, setup func, call func from Virtual methods, start all the interval\r\n   */\r\n  init() {\r\n    // start hooking on live change\r\n\r\n    this.fb$vietnamStock = this.get_fb$VietnamStock()\r\n\r\n    // hook on latest price on Firebase, modify the latest datapoint in Store\r\n    if (_.isEmpty(this.fb$vietnamStock) == false && this.fb$vietnamStock.on) {\r\n      // Hook on live change\r\n      this.fb$vietnamStock.on(\"child_changed\", snapshot => {\r\n        // snapshot is the changed symbol only, E.g.: \"GMD\"\r\n        this.mergeLatestPriceToStore(\r\n          {\r\n            [snapshot.key]: snapshot.val(),\r\n          },\r\n          this.state\r\n        )\r\n      })\r\n    }\r\n\r\n    // periodically sync the whole list of symbols, by HTTP request, in case the realtime Stream above is disconnected\r\n    setInterval(async () => {\r\n      // logdebug(\"sync all\");\r\n      const dataLatestPrices_AllSymbols = await this.getLatestPrices_HTTP_Once()\r\n      this.mergeLatestPriceToStore(dataLatestPrices_AllSymbols, this.state)\r\n    }, this.interval_syncAllLatestPricesAtOnce)\r\n\r\n    // periodically check to know whether we should clear the cache\r\n    setInterval(() => {\r\n      if (this.cacheInvalidator) {\r\n        this.cacheInvalidator()\r\n      }\r\n    }, this.interval_cacheInvalidator)\r\n    ///////////////\r\n  }\r\n\r\n  /**\r\n   * in Store, we have  array of OLHC for each symbol\r\n   * we have latest Price of some symbols in dataLatestPrices\r\n   * This function merges/set the latest price of appropriate symbols in state\r\n   * @param dataLatestPrices\r\n   * @param state\r\n   */\r\n  mergeLatestPriceToStore(dataLatestPrices, state) {\r\n    if (!dataLatestPrices) return\r\n\r\n    Object.keys(dataLatestPrices).forEach(function(symbolId, index) {\r\n      if (state[symbolId]) {\r\n        // if we have the history array of OLHC\r\n        // update the latest C in state\r\n        // NOTE: about the problem; when day change (to next day, because bee run nonstop from day1 to day2), we have to avoid assigning the current price (of day2) to close price of day1\r\n\r\n        let liveInfoOfSymbol = dataLatestPrices[symbolId]\r\n        // liveInfoOfSymbol structure\r\n        //         BMP:Object {ce: 56.3, fl: 49.05, frc_HOSE_ats: \"20190311 133008\", …}\r\n        // ce:56.3\r\n        // fl:49.05\r\n        // frc_ats:\"20190311 003610\"\r\n        // frc_crawler_ats:\"20190311 133008\"\r\n        // frc_HOSE_ats:\"20190311 133008\"\r\n        // frc_rts:20190308\r\n        // h:53.5\r\n        // l:52.6\r\n        // p:\"53\"\r\n        // r:52.7\r\n        // rts:\"20190311 134212\"\r\n        // ts:1552286575126\r\n        // v:\"1000\"\r\n\r\n        let objOnCurrentDate = state[symbolId].pricesOHLCExtended.filter(r => liveInfoOfSymbol.rts && r.ts == liveInfoOfSymbol.rts.substring(0, 8))\r\n        if (_.isArray(objOnCurrentDate) && objOnCurrentDate.length > 0) {\r\n          objOnCurrentDate = objOnCurrentDate[0]\r\n\r\n          // objOnCurrentDate is referenced by ref, so we can update it here\r\n          objOnCurrentDate.open = liveInfoOfSymbol.r || 0 // update info of currentDate to the cache\r\n          objOnCurrentDate.low = liveInfoOfSymbol.l || 0 // update info of currentDate to the cache\r\n          objOnCurrentDate.high = liveInfoOfSymbol.h || 0 // update info of currentDate to the cache\r\n          objOnCurrentDate.close = +liveInfoOfSymbol.p || 0 // update info of currentDate to the cache\r\n          objOnCurrentDate.v = +liveInfoOfSymbol.v || 0 // update info of currentDate to the cache\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Load from cache or from remote\r\n   * save to state when cache miss and we need to get data from remote\r\n   * @param {*} symbolCategory\r\n   * @param {*} symbolId\r\n   * @param {*} tickPeriod\r\n   * @param {*} limitLength\r\n   */\r\n  async loadSymbolHistory(symbolCategory, symbolId, tickPeriod = \"1D\", limitLength = 660) {\r\n    // cache hit\r\n    if (this.state[symbolId] && this.state[symbolId].pricesOHLCExtended) {\r\n      // console.log(\"cache hit\", symbolId);\r\n      return this.state[symbolId].pricesOHLCExtended\r\n    }\r\n\r\n    // cache miss, we fetch the fresh data from API\r\n    let pricesOHLCExtended = await this.listSymbolHistory(...arguments)\r\n    if (pricesOHLCExtended) {\r\n      pricesOHLCExtended = _.orderBy(pricesOHLCExtended, [\"ts\"], [\"asc\"])\r\n\r\n      // logdebug(`Cached ${symbolId} to state`);\r\n      this.state[symbolId] = {\r\n        symbolCategory,\r\n        pricesOHLCExtended,\r\n      }\r\n    }\r\n\r\n    return pricesOHLCExtended\r\n  }\r\n}\r\n","import CommonHelper from \"./helper/CommonHelper\"\r\nimport StockHelper from \"./helper/StockHelper\"\r\nimport AuthHelper from \"./helper/AuthHelper\"\r\nimport Util from \"./helper/Util\"\r\nimport ReactiveSymbolHistoryStore from \"./helper/ReactiveSymbolHistoryStore\"\r\n\r\nexport default { CommonHelper, Util, StockHelper, AuthHelper, ReactiveSymbolHistoryStore }\r\n"],"sourceRoot":""}